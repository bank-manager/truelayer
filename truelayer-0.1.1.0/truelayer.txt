-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/bank-manager/bank-auth-service#readme</a>
@package truelayer
@version 0.1.1.0

module Bank.TrueLayer

module Bank.TrueLayer.Auth
genAccessToken :: OAuth2 -> RefreshToken -> IO (Maybe OAuth2Token)
swapCode :: OAuth2 -> ExchangeToken -> IO (Maybe OAuth2Token)
buildOAuth2 :: Env -> ClientId -> ClientSecret -> URI -> OAuth2
getAuthorizationUrl :: OAuth2 -> [(Text, Text)] -> URI
newtype RefreshToken
RefreshToken :: Text -> RefreshToken
[rtoken] :: RefreshToken -> Text
newtype AccessToken
AccessToken :: Text -> AccessToken
[atoken] :: AccessToken -> Text
data OAuth2Token
OAuth2Token :: AccessToken -> Maybe RefreshToken -> Maybe Int -> Maybe Text -> Maybe IdToken -> OAuth2Token
[accessToken] :: OAuth2Token -> AccessToken
[refreshToken] :: OAuth2Token -> Maybe RefreshToken
[expiresIn] :: OAuth2Token -> Maybe Int
[tokenType] :: OAuth2Token -> Maybe Text
[idToken] :: OAuth2Token -> Maybe IdToken
data OAuth2
data ExchangeToken
data Env
Sandbox :: Env
Prod :: Env
instance GHC.Show.Show Bank.TrueLayer.Auth.ClientId
instance GHC.Show.Show Bank.TrueLayer.Auth.ClientSecret

module Bank.TrueLayer.DataAPI.Meta

module Bank.TrueLayer.Internal
getWithAuth :: FromJSON a => String -> Endpoint -> AccessToken -> IO (Maybe a)
getWithAuthAndOptions :: FromJSON a => Options -> String -> Endpoint -> AccessToken -> IO (Maybe a)
postWithAuth :: (ToJSON body, FromJSON res) => String -> body -> Endpoint -> AccessToken -> IO (Maybe res)
defaults :: Options
header :: HeaderName -> Lens' Options [ByteString]
param :: Text -> Lens' Options [Text]
fromString :: IsString a => String -> a
(.~) :: ASetter s t a b -> b -> s -> t

-- | <a>&amp;</a> is a reverse application operator. This provides
--   notational convenience. Its precedence is one higher than that of the
--   forward application operator <a>$</a>, which allows <a>&amp;</a> to be
--   nested in <a>$</a>.
--   
--   <pre>
--   &gt;&gt;&gt; 5 &amp; (+1) &amp; show
--   "6"
--   </pre>
(&) :: a -> (a -> b) -> b
infixl 1 &

-- | Combine two paths with a path separator. If the second path starts
--   with a path separator or a drive letter, then it returns the second.
--   The intention is that <tt>readFile (dir <a>&lt;/&gt;</a> file)</tt>
--   will access the same file as <tt>setCurrentDirectory dir; readFile
--   file</tt>.
--   
--   <pre>
--   Posix:   "/directory" &lt;/&gt; "file.ext" == "/directory/file.ext"
--   Windows: "/directory" &lt;/&gt; "file.ext" == "/directory\\file.ext"
--            "directory" &lt;/&gt; "/file.ext" == "/file.ext"
--   Valid x =&gt; (takeDirectory x &lt;/&gt; takeFileName x) `equalFilePath` x
--   </pre>
--   
--   Combined:
--   
--   <pre>
--   Posix:   "/" &lt;/&gt; "test" == "/test"
--   Posix:   "home" &lt;/&gt; "bob" == "home/bob"
--   Posix:   "x:" &lt;/&gt; "foo" == "x:/foo"
--   Windows: "C:\\foo" &lt;/&gt; "bar" == "C:\\foo\\bar"
--   Windows: "home" &lt;/&gt; "bob" == "home\\bob"
--   </pre>
--   
--   Not combined:
--   
--   <pre>
--   Posix:   "home" &lt;/&gt; "/bob" == "/bob"
--   Windows: "home" &lt;/&gt; "C:\\bob" == "C:\\bob"
--   </pre>
--   
--   Not combined (tricky):
--   
--   On Windows, if a filepath starts with a single slash, it is relative
--   to the root of the current drive. In [1], this is (confusingly)
--   referred to as an absolute path. The current behavior of
--   <a>&lt;/&gt;</a> is to never combine these forms.
--   
--   <pre>
--   Windows: "home" &lt;/&gt; "/bob" == "/bob"
--   Windows: "home" &lt;/&gt; "\\bob" == "\\bob"
--   Windows: "C:\\home" &lt;/&gt; "\\bob" == "\\bob"
--   </pre>
--   
--   On Windows, from [1]: "If a file name begins with only a disk
--   designator but not the backslash after the colon, it is interpreted as
--   a relative path to the current directory on the drive with the
--   specified letter." The current behavior of <a>&lt;/&gt;</a> is to
--   never combine these forms.
--   
--   <pre>
--   Windows: "D:\\foo" &lt;/&gt; "C:bar" == "C:bar"
--   Windows: "C:\\foo" &lt;/&gt; "C:bar" == "C:bar"
--   </pre>
(</>) :: FilePath -> FilePath -> FilePath
infixr 5 </>
data Options
newtype Endpoint
Endpoint :: String -> Endpoint
newtype AccessToken
AccessToken :: Text -> AccessToken
[atoken] :: AccessToken -> Text

module Bank.TrueLayer.DataAPI.Schema
newtype Ip
Ip :: String -> Ip
newtype Accounts
Accounts :: [Account] -> Accounts
[$sel:results:Accounts] :: Accounts -> [Account]
data Account
Account :: !ZonedTime -> !Maybe AccountId -> !Maybe String -> !Maybe String -> !Maybe String -> !AccountNumber -> !Provider -> Account
[$sel:update_timestamp:Account] :: Account -> !ZonedTime
[$sel:account_id:Account] :: Account -> !Maybe AccountId
[$sel:account_type:Account] :: Account -> !Maybe String
[$sel:display_name:Account] :: Account -> !Maybe String
[$sel:currency:Account] :: Account -> !Maybe String
[$sel:accountNumber:Account] :: Account -> !AccountNumber
[$sel:provider:Account] :: Account -> !Provider
data AccountBalance
AccountBalance :: !String -> !Double -> !Double -> !Maybe Double -> !Maybe String -> AccountBalance
[$sel:currency:AccountBalance] :: AccountBalance -> !String
[$sel:available:AccountBalance] :: AccountBalance -> !Double
[$sel:current:AccountBalance] :: AccountBalance -> !Double
[$sel:overdraft:AccountBalance] :: AccountBalance -> !Maybe Double
[$sel:update_timestamp:AccountBalance] :: AccountBalance -> !Maybe String
data AccountBalances
AccountBalances :: ![AccountBalance] -> !Maybe String -> AccountBalances
[$sel:results:AccountBalances] :: AccountBalances -> ![AccountBalance]
[$sel:status:AccountBalances] :: AccountBalances -> !Maybe String
newtype AccountId
AccountId :: String -> AccountId
data AccountNumber
AccountNumber :: !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> AccountNumber
[$sel:number:AccountNumber] :: AccountNumber -> !Maybe String
[$sel:sort_code:AccountNumber] :: AccountNumber -> !Maybe String
[$sel:swift_bic:AccountNumber] :: AccountNumber -> !Maybe String
[$sel:iban:AccountNumber] :: AccountNumber -> !Maybe String
[$sel:routing_number:AccountNumber] :: AccountNumber -> !Maybe String
data Card
Card :: !AccountId -> !String -> !String -> !String -> !String -> !String -> !String -> !Maybe String -> !Maybe String -> !ZonedTime -> !Provider -> Card
[$sel:account_id:Card] :: Card -> !AccountId
[$sel:card_network:Card] :: Card -> !String
[$sel:card_type:Card] :: Card -> !String
[$sel:currency:Card] :: Card -> !String
[$sel:display_name:Card] :: Card -> !String
[$sel:partial_card_number:Card] :: Card -> !String
[$sel:name_on_card:Card] :: Card -> !String
[$sel:valid_from:Card] :: Card -> !Maybe String
[$sel:valid_to:Card] :: Card -> !Maybe String
[$sel:update_timestamp:Card] :: Card -> !ZonedTime
[$sel:provider:Card] :: Card -> !Provider
newtype Cards
Cards :: [Card] -> Cards
[$sel:results:Cards] :: Cards -> [Card]
newtype CardBalances
CardBalances :: [CardBalance] -> CardBalances
[$sel:results:CardBalances] :: CardBalances -> [CardBalance]
data CardBalance
CardBalance :: !Double -> !String -> !Double -> !Double -> !Maybe Double -> !Maybe Day -> !Maybe Double -> !Maybe Day -> !ZonedTime -> CardBalance
[$sel:available:CardBalance] :: CardBalance -> !Double
[$sel:currency:CardBalance] :: CardBalance -> !String
[$sel:current:CardBalance] :: CardBalance -> !Double
[$sel:credit_limit:CardBalance] :: CardBalance -> !Double
[$sel:last_statement_balance:CardBalance] :: CardBalance -> !Maybe Double
[$sel:last_statement_date:CardBalance] :: CardBalance -> !Maybe Day
[$sel:payment_due:CardBalance] :: CardBalance -> !Maybe Double
[$sel:payment_due_date:CardBalance] :: CardBalance -> !Maybe Day
[$sel:update_timestamp:CardBalance] :: CardBalance -> !ZonedTime
data DirectDebit
DirectDebit :: !String -> !String -> !String -> !String -> !Maybe String -> !Maybe Double -> !Maybe String -> !Maybe DirectDebitMeta -> DirectDebit
[$sel:direct_debit_id:DirectDebit] :: DirectDebit -> !String
[$sel:timestamp:DirectDebit] :: DirectDebit -> !String
[$sel:name:DirectDebit] :: DirectDebit -> !String
[$sel:status:DirectDebit] :: DirectDebit -> !String
[$sel:previous_payment_timestamp:DirectDebit] :: DirectDebit -> !Maybe String
[$sel:previous_payment_amount:DirectDebit] :: DirectDebit -> !Maybe Double
[$sel:currency:DirectDebit] :: DirectDebit -> !Maybe String
[$sel:meta:DirectDebit] :: DirectDebit -> !Maybe DirectDebitMeta
data DirectDebitMeta
DirectDebitMeta :: !Maybe String -> !Maybe String -> DirectDebitMeta
[$sel:provider_mandate_identification:DirectDebitMeta] :: DirectDebitMeta -> !Maybe String
[$sel:provider_account_id:DirectDebitMeta] :: DirectDebitMeta -> !Maybe String
data DirectDebits
DirectDebits :: ![DirectDebit] -> !String -> DirectDebits
[$sel:results:DirectDebits] :: DirectDebits -> ![DirectDebit]
[$sel:status:DirectDebits] :: DirectDebits -> !String
newtype Provider
Provider :: ProviderId -> Provider
[$sel:provider_id:Provider] :: Provider -> ProviderId
newtype ProviderId
ProviderId :: String -> ProviderId
data RunningBalance
RunningBalance :: !Double -> !String -> RunningBalance
[$sel:amoung:RunningBalance] :: RunningBalance -> !Double
[$sel:currency:RunningBalance] :: RunningBalance -> !String
data StandingOrder
StandingOrder :: !String -> !Maybe String -> !String -> !Maybe String -> !Maybe StandingOrderMeta -> !Maybe String -> !Maybe Double -> !Maybe String -> !Maybe Double -> !Maybe String -> !Maybe Double -> !Maybe String -> !Maybe String -> StandingOrder
[$sel:frequency:StandingOrder] :: StandingOrder -> !String
[$sel:status:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:timestamp:StandingOrder] :: StandingOrder -> !String
[$sel:currency:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:meta:StandingOrder] :: StandingOrder -> !Maybe StandingOrderMeta
[$sel:next_payment_date:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:next_payment_amount:StandingOrder] :: StandingOrder -> !Maybe Double
[$sel:first_payment_date:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:first_payment_amount:StandingOrder] :: StandingOrder -> !Maybe Double
[$sel:final_payment_date:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:final_payment_amount:StandingOrder] :: StandingOrder -> !Maybe Double
[$sel:payee:StandingOrder] :: StandingOrder -> !Maybe String
[$sel:reference:StandingOrder] :: StandingOrder -> !Maybe String
newtype StandingOrderMeta
StandingOrderMeta :: Maybe String -> StandingOrderMeta
[$sel:provider_account_id:StandingOrderMeta] :: StandingOrderMeta -> Maybe String
data StandingOrders
StandingOrders :: ![StandingOrder] -> !String -> StandingOrders
[$sel:results:StandingOrders] :: StandingOrders -> ![StandingOrder]
[$sel:status:StandingOrders] :: StandingOrders -> !String
data Transaction
Transaction :: !TransactionId -> !Maybe TransactionId -> !Maybe TransactionId -> !ZonedTime -> !String -> !Double -> !String -> !String -> !String -> ![String] -> !Maybe String -> !Maybe RunningBalance -> !Maybe TransactionMeta -> Transaction
[$sel:transaction_id:Transaction] :: Transaction -> !TransactionId
[$sel:normalised_provider_transaction_id:Transaction] :: Transaction -> !Maybe TransactionId
[$sel:provider_transaction_id:Transaction] :: Transaction -> !Maybe TransactionId
[$sel:timestamp:Transaction] :: Transaction -> !ZonedTime
[$sel:description:Transaction] :: Transaction -> !String
[$sel:amount:Transaction] :: Transaction -> !Double
[$sel:currency:Transaction] :: Transaction -> !String
[$sel:transaction_type:Transaction] :: Transaction -> !String
[$sel:transaction_category:Transaction] :: Transaction -> !String
[$sel:transaction_classification:Transaction] :: Transaction -> ![String]
[$sel:merchant_name:Transaction] :: Transaction -> !Maybe String
[$sel:running_balance:Transaction] :: Transaction -> !Maybe RunningBalance
[$sel:meta:Transaction] :: Transaction -> !Maybe TransactionMeta
data TransactionMeta
TransactionMeta :: !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe ProviderId -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> !Maybe String -> TransactionMeta
[$sel:provider_transaction_category:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:provider_reference:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:provider_merchant_name:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:provider_category:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:address:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:provider_id:TransactionMeta] :: TransactionMeta -> !Maybe ProviderId
[$sel:counter_party_preferred_name:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:counter_party_iban:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:user_comments:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:debtor_account_name:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:transaction_type:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:provider_source:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:cardNumber:TransactionMeta] :: TransactionMeta -> !Maybe String
[$sel:location:TransactionMeta] :: TransactionMeta -> !Maybe String
newtype TransactionId
TransactionId :: String -> TransactionId
newtype Transactions
Transactions :: [Transaction] -> Transactions
[$sel:results:Transactions] :: Transactions -> [Transaction]
data TransactionParams
TransactionParams :: !Maybe String -> !Maybe String -> TransactionParams
[$sel:to:TransactionParams] :: TransactionParams -> !Maybe String
[$sel:from:TransactionParams] :: TransactionParams -> !Maybe String
addTransactionParams :: Maybe TransactionParams -> Options -> IO Options
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Ip
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.AccountBalance
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.AccountBalance
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.AccountBalance
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.AccountBalance
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.AccountBalances
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.AccountBalances
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.AccountBalances
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.AccountBalances
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.AccountId
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.AccountId
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.AccountId
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.AccountId
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.AccountNumber
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.AccountNumber
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.AccountNumber
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.AccountNumber
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.CardBalance
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.CardBalance
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.CardBalance
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.CardBalance
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.CardBalances
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.CardBalances
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.CardBalances
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.CardBalances
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.DirectDebitMeta
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.DirectDebitMeta
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.DirectDebitMeta
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.DirectDebitMeta
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.DirectDebit
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.DirectDebit
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.DirectDebit
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.DirectDebit
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.DirectDebits
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.DirectDebits
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.DirectDebits
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.DirectDebits
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.ProviderId
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.ProviderId
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.ProviderId
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.ProviderId
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Provider
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Provider
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Provider
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Provider
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Card
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Card
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Card
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Card
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Cards
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Cards
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Cards
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Cards
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Account
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Account
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Account
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Account
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Accounts
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Accounts
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Accounts
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Accounts
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.RunningBalance
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.RunningBalance
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.RunningBalance
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.RunningBalance
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.StandingOrderMeta
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.StandingOrderMeta
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.StandingOrderMeta
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.StandingOrderMeta
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.StandingOrder
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.StandingOrder
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.StandingOrder
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.StandingOrder
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.StandingOrders
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.StandingOrders
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.StandingOrders
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.StandingOrders
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.TransactionMeta
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.TransactionMeta
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.TransactionMeta
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.TransactionMeta
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.TransactionId
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.TransactionId
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.TransactionId
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.TransactionId
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Transaction
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Transaction
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Transaction
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Transaction
instance Data.Aeson.Types.ToJSON.ToJSON Bank.TrueLayer.DataAPI.Schema.Transactions
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.Transactions
instance GHC.Generics.Generic Bank.TrueLayer.DataAPI.Schema.Transactions
instance Data.Aeson.Types.FromJSON.FromJSON Bank.TrueLayer.DataAPI.Schema.Transactions
instance GHC.Show.Show Bank.TrueLayer.DataAPI.Schema.TransactionParams

module Bank.TrueLayer.DataAPI.Cards
cards :: Ip -> Endpoint -> AccessToken -> IO (Maybe Cards)
card :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe Cards)
cardBalance :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe CardBalances)
transactions :: Ip -> AccountId -> Maybe TransactionParams -> Endpoint -> AccessToken -> IO (Maybe Transactions)
pendingTransactions :: Ip -> AccountId -> Maybe TransactionParams -> Endpoint -> AccessToken -> IO (Maybe Transactions)

module Bank.TrueLayer.DataAPI.Accounts
accounts :: Ip -> Endpoint -> AccessToken -> IO (Maybe Accounts)
account :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe Accounts)
accountBalance :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe AccountBalances)
transactions :: Ip -> AccountId -> Maybe TransactionParams -> Endpoint -> AccessToken -> IO (Maybe Transactions)
pendingTransactions :: Ip -> AccountId -> Maybe TransactionParams -> Endpoint -> AccessToken -> IO (Maybe Transactions)
standingOrders :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe StandingOrders)
directDebits :: Ip -> AccountId -> Endpoint -> AccessToken -> IO (Maybe DirectDebits)
